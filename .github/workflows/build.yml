name: Build cross compilers
'on':
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      do_release:
        description: Create a release and upload files? (type "yes" to create)
        required: true
        default: 'no'
      release:
        description: Release tag and name
        required: true
  schedule:
    - cron: '0 6,18 * * *'
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      upload_url: '${{ steps.create_release.outputs.upload_url }}'
    steps:
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        if: '${{ github.event.inputs.do_release == "yes" }}'
        with:
          tag_name: '${{ github.event.inputs.release }}'
          release_name: '${{ github.event.inputs.release }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  compile:
    needs: prepare
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target:
          - aarch64-linux-musl
          - aarch64_be-linux-musl
          - arm-linux-musleabi
          - arm-linux-musleabihf
          - armeb-linux-musleabi
          - armeb-linux-musleabihf
          - armel-linux-musleabi
          - armel-linux-musleabihf
          - armv5l-linux-musleabihf
          - armv7l-linux-musleabihf
          - armv7m-linux-musleabi
          - armv7r-linux-musleabihf
          - i486-linux-musl
          - i686-linux-musl
          - m68k-linux-musl
          - microblaze-linux-musl
          - microblazeel-linux-musl
          - mips-linux-musl
          - mips-linux-musln32sf
          - mips-linux-muslsf
          - mips64-linux-musl
          - mips64-linux-musln32
          - mips64-linux-musln32sf
          - mips64el-linux-musl
          - mips64el-linux-musln32
          - mips64el-linux-musln32sf
          - mipsel-linux-musl
          - mipsel-linux-musln32
          - mipsel-linux-musln32sf
          - mipsel-linux-muslsf
          - or1k-linux-musl
          - powerpc-linux-musl
          - powerpc-linux-muslsf
          - powerpc64-linux-musl
          - powerpc64le-linux-musl
          - powerpcle-linux-musl
          - powerpcle-linux-muslsf
          - riscv64-linux-musl
          - s390x-linux-musl
          - sh2-linux-musl
          - sh2-linux-muslfdpic
          - sh2eb-linux-musl
          - sh2eb-linux-muslfdpic
          - sh4-linux-musl
          - sh4eb-linux-musl
          - x86_64-linux-musl
          - x86_64-linux-muslx32
        repo:
          - richfelker/musl-cross-make
          - pmmp/musl-cross-make
    env:
      TARGET: '${{ matrix.target }}'
      REPO: '${{ matrix.repo }}'
    steps:
      - uses: actions/checkout@v2
      - name: 'Clone ${{ matrix.repo }}'
        run: 'git clone https://github.com/${{ matrix.repo }} mcm'
      - name: 'Build ${{ matrix.target }}'
        run: |-
          make -j4
          make install
          ls output
        working-directory: mcm
      - name: 'Package ${{ matrix.target }}'
        id: package
        run: |-
          tar -cvf ../output-${{ matrix.target }}.tar.gz output/
          echo ::set-output name=source_escaped::${REPO%%/*}_${REPO##*/}
        working-directory: mcm
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'
      - id: upload
        name: Upload to releases
        uses: actions/upload-release-asset@v1
        if: '${{ github.event.inputs.do_release == "yes" }}'
        with:
          asset_path: 'output-${{ matrix.target }}.tar.gz'
          asset_name: >-
            output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped
            }}.tar.gz
          upload_url: '${{ needs.prepare.outputs.upload_url }}'
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

